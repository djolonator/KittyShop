// <auto-generated />
using System;
using KittyShop.Data.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KittyShop.Data.Migrations
{
    [DbContext(typeof(KittyShopContext))]
    [Migration("20231111131120_seed users")]
    partial class seedusers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KittyShop.Data.Entities.KartItem", b =>
                {
                    b.Property<int>("KartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KartItemId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingKartId")
                        .HasColumnType("int");

                    b.HasKey("KartItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingKartId");

                    b.ToTable("KartItem");
                });

            modelBuilder.Entity("KittyShop.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EyesColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FurrColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrlPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("KittyShop.Data.Entities.ShoppingKart", b =>
                {
                    b.Property<int>("ShoppingKartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingKartId"), 1L, 1);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingKartId");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingKarts");
                });

            modelBuilder.Entity("KittyShop.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "CfDJ8Kd3fbsdAEdLsODDeNf8c5r7gSLI-Lx8tRTK9uPUJEa86c1m4O7G_A7QND-DqBGcdHr8E_UvAJcNFm41K6pTfkfwUoHf9mUn4kn9hsxapHjy5H4Wa8Z-8Si4AcunyPOpfA",
                            Type = 1,
                            UserName = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "CfDJ8Kd3fbsdAEdLsODDeNf8c5r-RXW2JG7G_JvR6Wl2-pSS_MqG_QLanSUC6qWkWsMvN2FPNLLQw0TWUBwN0nMLWqlXd0T63Bst6DxnYIeDUgkHxIsiyzlcB6l7lKDyK-xgCQ",
                            Type = 0,
                            UserName = "Customer"
                        });
                });

            modelBuilder.Entity("KittyShop.Data.Entities.KartItem", b =>
                {
                    b.HasOne("KittyShop.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KittyShop.Data.Entities.ShoppingKart", "ShoppingKart")
                        .WithMany("KartItems")
                        .HasForeignKey("ShoppingKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingKart");
                });

            modelBuilder.Entity("KittyShop.Data.Entities.ShoppingKart", b =>
                {
                    b.HasOne("KittyShop.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KittyShop.Data.Entities.ShoppingKart", b =>
                {
                    b.Navigation("KartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
